@page "/category"
@inject ICategoryRepository _categoryRepository
@inject IJSRuntime _JS

<BSModal OnModalConfirmation="ConfirmDelete_Click" Title="Are you sure you want to delete this?" ButtonText="Delete" ButtonBootstrapStyle="btn-danger"></BSModal>

@if(IsProcessing)
{
    <div class="position-absolute w-75 h-75 d-flex flex-column align-items-center bg-white justify-content-center">
        <img src="/images/loading.gif" alt="Loading" />
    </div>
}
else
{
    <div class="card shadow border-0 mt-4">
        <div class="card-header bg-black bg-gradient ml-0 py-3">
            <div class="row">
                <div class="col-12 text-center">
                    <h2 class="text-white py-2">Category List</h2>
                </div>
            </div>
        </div>
        <div class="card-body p-4">
            <div class="row pb-3">
                <div class="col-12 text-end">
                    <a href="category/create" class="btn btn-lg btn-secondary" style="width:250px;">
                        <i class="bi bi-plus-square me-2"></i>Add New Category
                    </a>
                </div>
            </div>
            @if(Categories.Any())
            {
                <table class="table table-bordered table-striped">
                    <thead>
                        <tr>
                            <th>Name</th>
                            <th></th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach(var category in Categories)
                        {
                            <tr>
                                <td>
                                    @category.Name
                                </td>
                                <td>
                                    <a href="@($"category/update/{category.Id}")" class="btn btn-primary"><i class="bi bi-pencil-square me-2"></i>Edit</a>
                                    <button class="btn btn-danger" @onclick="()=>HandleDelete(category.Id)"><i class="bi bi-trash me-2"></i>Delete</button>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            }
        </div>
    </div>
}

@code {
    private bool IsProcessing { get; set; } = true;
    private IEnumerable<Category> Categories { get; set; } = new List<Category>();
    private int DeleteCategoryID { get; set; } = 0;

    // This will ensure the data is only loaded once.
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await LoadCategories();
            IsProcessing = false;
            StateHasChanged(); //This is necessary to update the UI.
        }
    }

    private async Task LoadCategories()
    {
        Categories = await _categoryRepository.GetAllAsync();

    }

    private void HandleDelete(int id)
    {
        DeleteCategoryID = id;
        _JS.InvokeVoidAsync("ShowConfirmationModal");
    }

    private async Task ConfirmDelete_Click(bool isConfirmed)
    {
        IsProcessing = true;
        await _JS.InvokeVoidAsync("HideConfirmationModal");
        if (isConfirmed && DeleteCategoryID != 0)
        {
            var result = await _categoryRepository.DeleteAsync(DeleteCategoryID);
            if (result)
            {
                _JS?.ToastrSuccess("Category Deleted Successfully");
            }
            else
            {
                _JS?.ToastrError("Category Delete Failed");
            }
            await LoadCategories();

        }
        DeleteCategoryID = 0;
        IsProcessing = false;
    }

}
